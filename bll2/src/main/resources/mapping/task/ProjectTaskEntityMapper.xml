<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ProjectTaskEntityMapper" >
  <resultMap id="BaseResultMap" type="com.maoding.task.entity.ProjectTaskEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="from_company_id" property="fromCompanyId" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="task_name" property="taskName" jdbcType="VARCHAR" />
    <result column="task_pid" property="taskPid" jdbcType="VARCHAR" />
    <result column="task_path" property="taskPath" jdbcType="VARCHAR"/>
    <result column="task_type" property="taskType" jdbcType="INTEGER" />
    <result column="task_level" property="taskLevel" jdbcType="INTEGER" />
    <result column="task_status" property="taskStatus" jdbcType="VARCHAR" />
    <result column="task_remark" property="taskRemark" jdbcType="VARCHAR" />
    <result column="seq" property="seq" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="is_operater_task" property="isOperaterTask" jdbcType="INTEGER" />
    <result column="complete_date" property="completeDate" jdbcType="DATE"/>
    <result column="org_id" property="orgId" jdbcType="VARCHAR" />
    <result column="be_modify_id" property="beModifyId" jdbcType="VARCHAR" />
    <result column="start_time"  property="startTime" jdbcType="DATE"/>
    <result column="end_time" property="endTime" jdbcType="DATE"/>
    <result column="end_status" property="endStatus" jdbcType="INTEGER" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, company_id,from_company_id,  project_id, task_name, task_pid, task_type, task_level,
    task_status,task_path,complete_date,
    task_remark, seq, create_date, create_by, update_date, update_by,
    is_operater_task,org_id,be_modify_id,start_time,end_time,end_status
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from maoding_web_project_task
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="listUnCompletedTaskByCompany" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select
    b.*
    from
    ( select t.task_path,t.complete_date from maoding_web_project_task t, maoding_web_project_task_relation r
    where t.project_id = #{projectId}
    and t.id = r.task_id and r.relation_status=0
    and r.from_company_id = #{fromCompanyId}
    <if test="toCompanyId!=null"> and r.to_company_id = #{toCompanyId}</if>
    and t.task_status='0' and t.task_type!='3') a
    INNER JOIN maoding_web_project_task b on (b.task_status='0' and b.task_type!='3' and position(concat(a.task_path) in b.task_path))
    where 1=1
    and (a.complete_date is null) and (b.complete_date is null)
    and b.is_operater_task = 0
  </select>

  <select id="listUnCompletedTask" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    ifnull(b.id,a.id) as id,
    ifnull(b.company_id,a.company_id) as company_id,
    ifnull(b.project_id,a.project_id) as project_id,
    ifnull(b.org_id,a.org_id) as org_id,
    ifnull(b.task_name,a.task_name) as task_name,
    ifnull(b.task_pid,a.task_pid) as task_pid,
    ifnull(b.task_type,a.task_type) as task_type,
    ifnull(b.task_level,a.task_level) as task_level,
    ifnull(b.task_status,a.task_status) as task_status,
    ifnull(b.task_path,a.task_path) as task_path,
    ifnull(b.complete_date,a.complete_date) as complete_date,
    ifnull(b.task_remark,a.task_remark) as task_remark,
    ifnull(b.seq,a.seq) as seq,
    ifnull(b.create_date,a.create_date) as create_date,
    ifnull(b.create_by,a.create_by) as create_by,
    ifnull(b.update_date,a.update_date) as update_date,
    ifnull(b.update_by,a.update_by) as update_by,
    ifnull(b.is_operater_task,a.is_operater_task) as is_operater_task,
    ifnull(b.be_modify_id,a.be_modify_id) as be_modify_id
    from
    ( select * from maoding_web_project_task where task_status='0' and task_type!='3' and task_pid=#{taskPid}) a
    left join maoding_web_project_task b on (b.task_status='0' and b.task_type!='3' and position(concat(a.task_path,'-') in b.task_path))
    left join maoding_web_project_task_relation c on (c.relation_status=0 and c.task_id=b.id)
    where (a.complete_date is null) and (b.complete_date is null)
    and (b.task_type is null or b.task_type=0 or (b.task_type=2 and c.task_id is null))
  </select>

  <delete id="deleteById" parameterType="java.lang.String" >
    delete from maoding_web_project_task
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <update id="updateModifyTaskPid" parameterType="java.util.Map" >
    update maoding_web_project_task
    set task_pid = #{taskPid,jdbcType=VARCHAR}, task_path = CONCAT(#{parentPath,jdbcType=VARCHAR},id)
    where task_pid = #{publishId,jdbcType=VARCHAR} and task_type=4 and be_modify_id is null
  </update>

  <insert id="insert" parameterType="com.maoding.task.entity.ProjectTaskEntity" >
    insert into maoding_web_project_task (id, company_id,from_company_id,
    project_id, org_id,
      task_name, task_pid, task_type, complete_date,
      task_level, task_status, task_remark, 
      seq, create_date, create_by,
      update_date, update_by,
      is_operater_task,be_modify_id,
      start_time, end_time,
      task_path,end_status)
    values (#{id,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR},#{fromCompanyId,jdbcType=VARCHAR},
    #{projectId,jdbcType=VARCHAR}, #{orgId,jdbcType=VARCHAR},
      #{taskName,jdbcType=VARCHAR}, #{taskPid,jdbcType=VARCHAR}, #{taskType,jdbcType=INTEGER},#{completeDate,jdbcType=DATE},
      #{taskLevel,jdbcType=INTEGER},
      <choose>
      <when test="taskStatus!=null">
        #{taskStatus,jdbcType=VARCHAR},
      </when>
      <otherwise>
        '0',
      </otherwise>
    </choose>
      #{taskRemark,jdbcType=VARCHAR},
      #{seq,jdbcType=INTEGER}, now(), #{createBy,jdbcType=VARCHAR},
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR},
      #{isOperaterTask,jdbcType=INTEGER},#{beModifyId,jdbcType=INTEGER},
      #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE},
      #{taskPath,jdbcType=LONGVARCHAR},'0')
  </insert>

  <update id="updateById" parameterType="com.maoding.task.entity.ProjectTaskEntity" >
    update maoding_web_project_task
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="fromCompanyId != null" >
        from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="orgId != null" >
        org_id = #{orgId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskPid != null" >
        task_pid = #{taskPid,jdbcType=VARCHAR},
      </if>
      <!--<if test="taskType != null and taskType!=0" >-->
        <!--task_type = #{taskType,jdbcType=INTEGER},-->
      <!--</if>-->
      <if test="taskLevel != null and taskLevel!=0" >
        task_level = #{taskLevel,jdbcType=INTEGER},
      </if>
      <if test="completeDate != null" >
        complete_date = #{completeDate,jdbcType=DATE},
      </if>
      <if test="taskStatus != null" >
        task_status = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="taskRemark != null" >
        task_remark = #{taskRemark,jdbcType=VARCHAR},
      </if>
      <if test="seq != null" >
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="beModifyId != null" >
        be_modify_id = #{beModifyId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="isOperaterTask != null" >
        is_operater_task = #{isOperaterTask,jdbcType=INTEGER},
      </if>
      <if test="taskPath != null" >
        task_path = #{taskPath,jdbcType=LONGVARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="endStatus != null" >
        end_status = #{endStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>


  <update id="updateByTaskId" parameterType="com.maoding.task.entity.ProjectTaskEntity" >
    update maoding_web_project_task
    <set >
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="fromCompanyId != null" >
        from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null" >
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="taskPid != null" >
        task_pid = #{taskPid,jdbcType=VARCHAR},
      </if>
      <if test="taskStatus != null" >
        task_status = #{taskStatus,jdbcType=VARCHAR},
      </if>
      <if test="taskRemark != null" >
        task_remark = #{taskRemark,jdbcType=VARCHAR},
      </if>
      <if test="beModifyId != null" >
        be_modify_id = #{beModifyId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="taskPath != null" >
        task_path = #{taskPath,jdbcType=LONGVARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="endStatus != null" >
        end_status = #{endStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateByParam"  parameterType="java.util.Map" >
    update maoding_web_project_task SET task_status=1
    WHERE
    task_status='0'
    <if test="companyId != null" >
      AND  company_id = #{companyId,jdbcType=VARCHAR}
    </if>
    <if test="fromCompanyId != null" >
      AND  from_company_id = #{fromCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="projectId != null" >
      AND  project_id = #{projectId,jdbcType=VARCHAR}
    </if>
    <if test="taskName != null" >
      AND task_name = #{taskName,jdbcType=VARCHAR}
    </if>
    <if test="taskPid != null" >
      AND  task_pid = #{taskPid,jdbcType=VARCHAR}
    </if>
    <if test="taskType != null " >
        AND   task_type = #{taskType,jdbcType=INTEGER}
    </if>
    <if test="taskLevel != null  and taskLevel!=0 " >
       AND  task_level = #{taskLevel,jdbcType=INTEGER}
    </if>
    <if test="taskRemark != null" >
      AND  task_remark = #{taskRemark,jdbcType=VARCHAR}
    </if>
    <if test="taskPath != null" >
      AND  task_path  LIKE '%' #{taskPath} '%'
    </if>
    <if test="beModifyId != null" >
      AND be_modify_id = #{beModifyId,jdbcType=VARCHAR}
    </if>
    <if test="seq != null" >
      AND  seq = #{seq,jdbcType=INTEGER}
    </if>
    ORDER BY task_path
  </update>

  <update id="update" parameterType="com.maoding.task.entity.ProjectTaskEntity" >
    update maoding_web_project_task
    set company_id = #{companyId,jdbcType=VARCHAR},
      from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      task_name = #{taskName,jdbcType=VARCHAR},
      task_pid = #{taskPid,jdbcType=VARCHAR},
      task_type = #{taskType,jdbcType=INTEGER},
      task_level = #{taskLevel,jdbcType=INTEGER},
      task_status = #{taskStatus,jdbcType=VARCHAR},
      task_remark = #{taskRemark,jdbcType=VARCHAR},
      seq = #{seq,jdbcType=INTEGER},
      be_modify_id = #{beModifyId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      end_status = #{endStatus,jdbcType=INTEGER},
      task_path = #{taskPath,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateProjectTaskStatus" parameterType="com.maoding.task.entity.ProjectTaskEntity" >
    update maoding_web_project_task
    set task_status = #{taskStatus,jdbcType=VARCHAR}
    where task_path LIKE '%' #{taskPath,jdbcType=VARCHAR} '%'
  </update>

  <select id="getNotSetResponsibleTask" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select a.id,a.task_name,a.project_id,a.company_id
    from maoding_web_project_task a
    LEFT JOIN maoding_web_project_task_relation b on a.id = b.task_id and b.relation_status='0'
    LEFT JOIN maoding_web_project_member c on a.id = c.target_id and c.member_type=3 and c.deleted = 0
    where a.task_status='0' AND a.task_type != 3  and  b.id is null and c.id is null and a.task_pid is not null
    and a.project_id = #{projectId,jdbcType=VARCHAR}
    and a.company_id = #{companyId,jdbcType=VARCHAR}
  </select>

  <!-- 获取我负责的任务-->
  <select id="getMyResponsibleTask" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select a.id,a.task_name,a.project_id,a.company_id
    from maoding_web_project_task a
    INNER JOIN maoding_web_project_member c on a.id = c.target_id and c.member_type=3 and c.deleted=0
    where a.task_status='0' AND (a.task_type = 0 or a.task_type = 2 or a.task_type = 1)
    and a.project_id = #{projectId,jdbcType=VARCHAR}
    and a.company_id = #{companyId,jdbcType=VARCHAR}
    and c.company_user_id = #{companyUserId,jdbcType=VARCHAR}
    <if test="notComplete != null" >
      and a.complete_date is null
    </if>
  </select>

  <select id="selectByParam" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM maoding_web_project_task task
    WHERE 1=1 and  task_status='0' and  task_type!='3' and  task_type!='4'
    <if test="companyId != null" >
      AND  company_id = #{companyId,jdbcType=VARCHAR}
    </if>
    <if test="projectId != null" >
      AND  project_id = #{projectId,jdbcType=VARCHAR}
    </if>

    <if test="taskName != null" >
      AND task_name = #{taskName,jdbcType=VARCHAR}
    </if>
    <if test="taskPid != null" >
      AND  task_pid = #{taskPid,jdbcType=VARCHAR}
    </if>
    <if test="taskType != null" >
      AND   task_type = #{taskType,jdbcType=INTEGER}
    </if>
    <if test="taskLevel != null" >
      AND  task_level = #{taskLevel,jdbcType=INTEGER}
    </if>
    <if test="taskRemark != null" >
      AND  task_remark = #{taskRemark,jdbcType=VARCHAR}
    </if>
    <if test="taskPath != null" >
      AND  task_path LIKE  '%' #{taskPath} '%'
    </if>
    <if test="seq != null" >
      AND  seq = #{seq,jdbcType=INTEGER}
    </if>
    <if test="notIncludeDesignTask != null" >
      AND  task_Type!='5'
    </if>
    <if test="notComplete != null" >
      AND is_operater_task = 0
      AND  complete_date is NULL
    </if>
    <if test="syncDate != null">
      <![CDATA[  and task.create_date <= #{syncDate,jdbcType=VARCHAR}  ]]>
    </if>
    order by seq
  </select>


  <select id="listChildTaskForPublish" resultMap="BaseResultMap" parameterType="java.util.Map" >
    SELECT
    <include refid="Base_Column_List" />
    FROM maoding_web_project_task task
    WHERE 1=1 and  task_status!='1'
    and task_pid = #{taskPid,jdbcType=VARCHAR}
  </select>
  <select id="getTaskByIdList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from maoding_web_project_task
    <where>
      (task_status='0' or task_status='2')
      and id in
      <foreach collection="idList" item="id" open="(" close=")" separator=",">
        #{id}
      </foreach>
    </where>
  </select>

  <update id="updateTaskOrgId" parameterType="java.lang.String">
    update maoding_web_project_task
    set org_id = null
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="getProjectTaskByPidAndTaskName" resultMap="BaseResultMap" parameterType="java.util.Map" >
      select
    a.id as be_modify_id,a.company_id, a.project_id, a.org_id,a.task_name, a.task_pid, a.task_type, a.task_level, a.task_status,a.task_path,a.complete_date,
      a.task_remark, a.seq, a.is_operater_task,ifnull(b.id,a.id) as id
      from maoding_web_project_task a
      LEFT JOIN maoding_web_project_task b on a.id = b.be_modify_id
      where  a.task_status!='1'
      and ((a.task_type = 3 and b.id is null and a.be_modify_id is null) or (a.task_type = 2 and b.id is null) or (a.task_type=2 and b.task_type=3))
      and a.project_id = #{projectId,jdbcType=VARCHAR}
      <if test="taskPid != null" >
          and a.task_pid = #{taskPid,jdbcType=VARCHAR}
      </if>
      <if test="taskPid == null" >
          and a.task_pid is null
      </if>
      and binary (a.task_name = #{taskName,jdbcType=VARCHAR} or b.task_name = #{taskName,jdbcType=VARCHAR})
  </select>

  <update id="resetTaskCompleteStatus" parameterType="java.lang.String" >
    update maoding_web_project_task
    set complete_date=null
    <where>
      id = #{taskId}
      and task_status='0'
    </where>
  </update>

  <update id="resetProcessNodeCompleteStatus" parameterType="java.lang.String" >
    update maoding_web_project_process_node
    set complete_time=null
    <where>
      id = #{processNodeId}
      and status='0'
    </where>
  </update>

  <select id="getProjectTaskMaxSeq" resultType="java.lang.Integer" parameterType="java.util.Map">
    select IFNULL(max(seq),0)+1 from maoding_web_project_task
    where project_id = #{projectId,jdbcType=VARCHAR}
    and task_status!='1'
    <if test="taskPid != null" >
      and task_pid = #{taskPid,jdbcType=VARCHAR}
    </if>
    <if test="taskPid == null" >
      and task_pid is null
    </if>
  </select>


    <!-- 计算任务状态的sql start -->
    <sql id="task_time_table">
        select target_id,start_time,end_time
        from
        (select
        target_id,start_time,end_time
        from
        maoding_web_project_process_time
        ORDER BY
        create_date desc
        ) t
        group by target_id
    </sql>
    <sql id="task_state_table">
        select
        e.id as task_id,
        max(e.complete_date) as complete_date,
        count(1) as responsibler_count,
        sum(e.not_complete) as not_complete_count
        from
        ( SELECT
            e1.id as id,
            e2.complete_date as complete_date,
            if(e2.complete_date is null,1,0) as not_complete
        FROM
        ( select id
          from maoding_web_project_task
          where ((task_status='0') and (id=#{taskId} or task_pid=#{taskId}))
        ) e1
        inner join maoding_web_project_task e2 on ((e2.task_type=0 or e2.task_type=2) and e2.task_status='0' and (POSITION(e1.id IN e2.task_path)>0))
        inner join  maoding_web_project_member e3 ON (e3.target_id = e2.id and e3.member_type=3 and e3.deleted=0 )
        ) e
        group by e.id
    </sql>
    <select id="getTaskState" parameterType="java.lang.String" resultType="java.lang.Integer">
        select
        if(a1.start_time is null,0,
        if(ifnull(a3.responsibler_count,0)=0,10,
        if(ifnull(a3.not_complete_count,1)=0,if(datediff(a3.complete_date,a1.end_time)>0,4,3),
        if(date(a1.start_time)>current_date(),5,
        if(datediff(current_date(),date(a1.end_time))>0,2,
        if((10*datediff(current_date(),date(a1.start_time)))>(9*datediff(date(a1.end_time),date(a1.start_time))),6,1)))))) as task_state
        from
        (   select id,start_time,end_time
        from maoding_web_project_task
        where task_status='0' and id=#{taskId}) a1
        left join (<include refid="task_state_table"/>) a3 on (a1.id=a3.task_id)
        limit 1
    </select>
    <!-- 计算任务状态的sql end -->
</mapper>