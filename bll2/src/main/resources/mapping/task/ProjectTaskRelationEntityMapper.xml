<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ProjectTaskRelationEntityMapper" >
  <resultMap id="BaseResultMap" type="com.maoding.task.entity.ProjectTaskRelationEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="from_company_id" property="fromCompanyId" jdbcType="VARCHAR" />
    <result column="to_company_id" property="toCompanyId" jdbcType="VARCHAR" />
    <result column="task_id" property="taskId" jdbcType="VARCHAR" />
    <result column="relation_status" property="relationStatus" jdbcType="INTEGER" />
    <result column="relation_type" property="relationType" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, from_company_id, to_company_id, task_id, relation_status, relation_type, create_date,
    create_by, update_date, update_by
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from maoding_web_project_task_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectByParam" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select a.id, a.from_company_id, a.to_company_id, a.task_id, a.relation_status, a.relation_type, a.create_date
    from maoding_web_project_task_relation a
    <if test="projectId != null" >
      LEFT JOIN maoding_web_project_task b on a.task_id = b.id
    </if>
    where relation_status='0'
    <if test="fromCompanyId != null" >
      AND from_company_id = #{fromCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="toCompanyId != null" >
      AND  to_company_id = #{toCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="taskId != null" >
      AND task_id = #{taskId,jdbcType=VARCHAR}
    </if>
    <if test="projectId != null" >
      AND b.project_id =  #{projectId,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="getProjectTaskRelationByTaskId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from maoding_web_project_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR} and relation_status='0'
  </select>

  <select id="getProjectTaskRelationByProjectId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select a.id, a.from_company_id, a.to_company_id, a.task_id, a.relation_status, a.relation_type
    from maoding_web_project_task_relation a
    LEFT JOIN maoding_web_project_task b on a.task_id = b.id
    where a.relation_status='0' and b.task_status='0' and b.project_id =  #{projectId,jdbcType=VARCHAR}
  </select>

  <select id="getProjectTaskRelationByFromCompanyId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select a.id, a.from_company_id, a.to_company_id, a.task_id, a.relation_status, a.relation_type
    from maoding_web_project_task_relation a
    LEFT JOIN maoding_web_project_task b on a.task_id = b.id
    where a.relation_status='0' and b.task_status='0'
    and b.project_id =  #{projectId,jdbcType=VARCHAR}
    and a.from_company_id =  #{fromCompanyId,jdbcType=VARCHAR}
    group by a.from_company_id,a.to_company_id
  </select>


  <delete id="deleteById" parameterType="java.lang.String" >
    delete from maoding_web_project_task_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteProjectTaskRelationByTaskId" parameterType="java.lang.String" >
    delete from maoding_web_project_task_relation
    where task_id = #{taskId,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.maoding.task.entity.ProjectTaskRelationEntity" >
    insert into maoding_web_project_task_relation (id, from_company_id, to_company_id,
    task_id, relation_status, relation_type,
    create_date, create_by, update_date,
    update_by)
    values (#{id,jdbcType=VARCHAR}, #{fromCompanyId,jdbcType=VARCHAR}, #{toCompanyId,jdbcType=VARCHAR},
    #{taskId,jdbcType=VARCHAR}, #{relationStatus,jdbcType=INTEGER}, #{relationType,jdbcType=INTEGER},
    now(), #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP},
    #{updateBy,jdbcType=VARCHAR})
  </insert>

  <update id="updateById" parameterType="com.maoding.task.entity.ProjectTaskRelationEntity" >
    update maoding_web_project_task_relation
    <set >
      <if test="fromCompanyId != null" >
        from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="toCompanyId != null" >
        to_company_id = #{toCompanyId,jdbcType=VARCHAR},
      </if>
      <if test="taskId != null" >
        task_id = #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="relationStatus != null" >
        relation_status = #{relationStatus,jdbcType=INTEGER},
      </if>
      <if test="relationType != null" >
        relation_type = #{relationType,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
        update_date = now(),
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="update" parameterType="com.maoding.task.entity.ProjectTaskRelationEntity" >
    update maoding_web_project_task_relation
    set from_company_id = #{fromCompanyId,jdbcType=VARCHAR},
    to_company_id = #{toCompanyId,jdbcType=VARCHAR},
    task_id = #{taskId,jdbcType=VARCHAR},
    relation_status = #{relationStatus,jdbcType=INTEGER},
    relation_type = #{relationType,jdbcType=INTEGER},
    create_date = #{createDate,jdbcType=TIMESTAMP},
    create_by = #{createBy,jdbcType=VARCHAR},
    update_date = now(),
    update_by = #{updateBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="updateTaskRelationStatus" parameterType="java.util.Map" >
    update maoding_web_project_task_relation
    set relation_status = #{relationStatus,jdbcType=INTEGER}
    where task_id in
    <foreach collection="taskIdList" index="index" item="taskId" open="(" separator="," close=")">
      #{taskId}
    </foreach>
  </update>

  <select id="getTaskIssueCount" resultType="java.lang.Integer" parameterType="java.util.Map" >
    select count(1)
    from maoding_web_project_task_relation
    where relation_status='0' and  task_id in
    <foreach collection="taskIdList" index="index" item="taskId" open="(" separator="," close=")">
      #{taskId}
    </foreach>
  </select>


  <select id="getProjectRelation" resultType="java.util.Map" parameterType="java.util.Map" >
    select a.id, a.from_company_id as fromCompanyId, a.to_company_id as toCompanyId, GROUP_CONCAT(a.task_id) as taskId
    from maoding_web_project_task_relation a
    LEFT JOIN maoding_web_project_task b on a.task_id = b.id
    where a.relation_status='0'
    and b.task_status='0'
    and b.project_id =  #{projectId,jdbcType=VARCHAR}
    and (a.from_company_id =  #{companyId,jdbcType=VARCHAR} or a.to_company_id =#{companyId,jdbcType=VARCHAR} )
    GROUP by a.from_company_id,a.to_company_id
  </select>


  <select id="getProjectTaskRelationByCompanyId" resultMap="BaseResultMap" parameterType="java.util.Map" >
    select a.id, a.from_company_id, a.to_company_id, a.task_id, a.relation_status, a.relation_type
    from maoding_web_project_task_relation a
    LEFT JOIN maoding_web_project_task b on a.task_id = b.id
    where a.relation_status='0' and b.task_status='0'
    and b.project_id =  #{projectId,jdbcType=VARCHAR}
    and (a.from_company_id =  #{companyId,jdbcType=VARCHAR} or a.to_company_id =#{companyId,jdbcType=VARCHAR} )
  </select>

</mapper>