<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="MaodingCircleEntityMapper" >

  <resultMap id="BaseResultMap" type="com.maoding.circle.entity.MaodingCircleEntity" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="publish_user_id" property="publishUserId" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="circle_type" property="circleType" jdbcType="INTEGER" />
    <result column="deleted" property="deleted" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, publish_user_id, company_id, circle_type, project_id,deleted,content, create_date, create_by, update_date,
    update_by
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from maoding_circle
    where id = #{id,jdbcType=VARCHAR}
  </select>

  <delete id="deleteById" parameterType="java.lang.String" >
    delete from maoding_circle
    where id = #{id,jdbcType=VARCHAR}
  </delete>

  <insert id="insert" parameterType="com.maoding.circle.entity.MaodingCircleEntity" >
    insert into maoding_circle (id, publish_user_id, company_id, 
      circle_type, deleted, create_date, 
      create_by, update_date, update_by, 
      content,project_id)
    values (#{id,jdbcType=VARCHAR}, #{publishUserId,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{circleType,jdbcType=INTEGER}, #{deleted,jdbcType=INTEGER}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{content,jdbcType=LONGVARCHAR}, #{projectId,jdbcType=VARCHAR})
  </insert>

  <update id="updateById" parameterType="com.maoding.circle.entity.MaodingCircleEntity" >
    update maoding_circle
    <set >
      <if test="publishUserId != null" >
        publish_user_id = #{publishUserId,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="projectId != null" >
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="circleType != null" >
        circle_type = #{circleType,jdbcType=INTEGER},
      </if>
      <if test="deleted != null" >
        deleted = #{deleted,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <update id="update" parameterType="com.maoding.circle.entity.MaodingCircleEntity" >
    update maoding_circle
    set publish_user_id = #{publishUserId,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      project_id = #{projectId,jdbcType=VARCHAR},
      circle_type = #{circleType,jdbcType=INTEGER},
      deleted = #{deleted,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

</mapper>