<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="GetProjectCostMapper" >
  <resultMap id="BaseResultMapDto" type="com.maoding.projectcost.dto.ProjectCostDTO" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="project_id" property="projectId" jdbcType="VARCHAR" />
    <result column="from_company_id" property="fromCompanyId" jdbcType="VARCHAR" />
    <result column="to_company_id" property="toCompanyId" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DECIMAL" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    id, project_id, from_company_id,to_company_id, type, fee,  remark, status,create_date,
    create_by, update_date, update_by
  </sql>

  <select id="selectByParam" parameterType="java.util.Map" resultMap="BaseResultMapDto">
    SELECT
    <include refid="Base_Column_List" />
    from maoding_web_project_cost
    where status= '0'
    and project_id=#{projectId,jdbcType=VARCHAR}
    and type = #{type,jdbcType=VARCHAR}
    <if test="fromCompanyId != null" >
      and from_company_id = #{fromCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="toCompanyId != null" >
      and to_company_id = #{toCompanyId,jdbcType=VARCHAR}
    </if>
    <if test="costId != null" >
      and id = #{costId,jdbcType=VARCHAR}
    </if>
    <if test="flag != null" >
      and flag = #{flag,jdbcType=VARCHAR}
    </if>
    order by create_date desc;
  </select>

  <select id="getCostPointData" resultType="com.maoding.projectcost.dto.ProjectCostPointDataForMyTaskDTO" parameterType="java.util.Map">
    SELECT b.id,b.fee_description,b.fee_proportion,b.fee,b.type,c.id as point_detail_id,c.fee as point_detail_fee,
    if(f.nick_name is null or f.nick_name='',e.company_name,f.nick_name) as company_name,
    <if test = "paymentDetailId!=null">
      ,d.fee as payment_fee
    </if>
    from maoding_web_project_cost a
    LEFT JOIN maoding_web_project_cost_point b on a.id = b.cost_id
    LEFT JOIN maoding_web_project_cost_point_detail c on b.id = c.point_id
    <if test = "paymentDetailId!=null">
      LEFT JOIN maoding_web_project_cost_payment_detail d on c.id = d.point_detail_id
    </if>
    LEFT JOIN maoding_web_company e on (a.from_company_id = e.id or a.to_company_id = e.id) and e.id!= #{companyId,jdbcType=VARCHAR}
    LEFT JOIN maoding_web_business_partner f on f.company_id = e.id
    where 1=1
    <if test = "pointDetailId!=null">
      AND c.id = #{pointDetailId,jdbcType=VARCHAR}
    </if>
    <if test = "paymentDetailId!=null">
      AND d.id = #{paymentDetailId,jdbcType=VARCHAR}
    </if>
  </select>

  <select id="getProjectAmountFee" resultType="com.maoding.projectcost.dto.ProjectAmountFee" parameterType="java.util.Map">
    SELECT
    ifnull(sum(if(to_company_id = #{companyId},c.fee,0)),0) as sumIncome,
    ifnull(sum(if(from_company_id = #{companyId},c.fee,0)),0) as sumPay,
    ifnull(sum(if(to_company_id = #{companyId},d.paid_fee,0)),0) as totalIncome,
    ifnull(sum(if(from_company_id = #{companyId},d.pay_fee,0)),0) as totalPay
    from maoding_web_project_cost a
    INNER JOIN maoding_web_project_cost_point b on a.id = b.cost_id and b.`status`= 0
    INNER JOIN maoding_web_project_cost_point_detail c on b.id = c.point_id and c.`status` = 0
    LEFT  JOIN (SELECT sum(if(pay_date is not null,fee,0)) as pay_fee, sum(if(paid_date is not null,fee,0))as paid_fee,point_detail_id
      from maoding_web_project_cost_payment_detail f where `status` = 0 GROUP BY point_detail_id) d on c.id = d.point_detail_id
    where a.project_id= #{projectId} and a.`status`=0
  </select>


  <select id="getProjectTechAmountFee" resultType="com.maoding.projectcost.dto.ProjectCooperatorCostDTO" parameterType="java.util.Map">
    SELECT a.id as costId, if(a.to_company_id = #{companyId},1,2) as feeType,
     sum(ifnull(d.pay_fee,0)) as sumPayFee,sum(ifnull(d.paid_fee,0)) as sumPaidFee,
    ifnull(a.fee,0) as planFee,
    sum(ifnull(c.fee,0)) as detailFee,
    ( select  if(b1.nick_name is null or b1.nick_name='',a1.company_name,b1.nick_name)
      from maoding_web_company a1 LEFT JOIN maoding_web_business_partner b1 on a1.id = b1.company_id and b1.type=3
      where a1.id = if(a.to_company_id = #{companyId},a.from_company_id,a.to_company_id) limit 1
      ) as companyName,e.task_name as taskName
    from maoding_web_project_cost a
    LEFT JOIN maoding_web_project_cost_point b on a.id = b.cost_id and b.`status`= 0
    LEFT JOIN maoding_web_project_cost_point_detail c on b.id = c.point_id and c.`status` = 0
    LEFT JOIN (SELECT sum(if(pay_date is not null,fee,0)) as pay_fee, sum(if(paid_date is not null,fee,0))as paid_fee,point_detail_id
      from maoding_web_project_cost_payment_detail f where `status` = 0 GROUP BY point_detail_id) d on c.id = d.point_detail_id
    LEFT JOIN (select r.from_company_id,r.to_company_id,group_concat(t.task_name separator '„ÄÅ' ) as task_name from maoding_web_project_task_relation r
                INNER  JOIN  maoding_web_project_task t ON r.task_id = t.id and r.relation_status = 0 and t.task_status !=1
                where t.project_id =  #{projectId} and (r.from_company_id = #{companyId} or r.to_company_id = #{companyId})
                GROUP BY r.from_company_id,r.to_company_id
     ) e on a.from_company_id = e.from_company_id and a.to_company_id = e.to_company_id
    where a.project_id = #{projectId}
    and a.type = 3
    and (a.from_company_id = #{companyId} or a.to_company_id = #{companyId})
    GROUP BY a.id
  </select>
</mapper>